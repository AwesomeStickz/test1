name: PR Preview

on:
    pull_request_target:
        types: ['edited', 'opened', 'reopened', 'synchronize']

permissions:
    contents: write
    pull-requests: write
    actions: write

jobs:
    preview:
        if: github.event.pull_request.head.repo.full_name != github.repository
        runs-on: ubuntu-latest

        steps:
            - name: Checkout main repository
              uses: actions/checkout@v3

            - name: Fetch PR branch from fork
              run: |
                  git fetch https://github.com/${{ github.event.pull_request.head.repo.full_name }} ${{ github.event.pull_request.head.ref }}

            - name: Copy contents to preview branch
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT }}
              run: |
                  PREVIEW_BRANCH="preview-${{ github.event.pull_request.number }}"
                  git checkout -b $PREVIEW_BRANCH FETCH_HEAD
                  git push origin $PREVIEW_BRANCH --force

            - name: Trigger Cloudflare Pages preview build
              id: cf-preview
              run: |
                  CF_API_TOKEN=${{ secrets.CF_API_TOKEN }}
                  CF_ACCOUNT_ID=${{ secrets.CF_ACCOUNT_ID }}
                  CF_PROJECT_NAME=${{ secrets.CF_PROJECT_NAME }}
                  PREVIEW_BRANCH="preview-${{ github.event.pull_request.number }}"

                  response=$(curl -s -X POST "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments" \
                    -H "Authorization: Bearer ${CF_API_TOKEN}" \
                    -H "Content-Type: multipart/form-data" \
                    -F branch="${PREVIEW_BRANCH}")

                  PREVIEW_URL=$(echo $response | jq -r '.result.url')
                  SHORT_ID=$(echo $response | jq -r '.result.short_id')
                  PREVIEW_ID=$(echo $response | jq -r '.result.id')
                  COMMIT_HASH=$(echo $response | jq -r '.result.deployment_trigger.metadata.commit_hash' | head -c 7) # Extract and shorten commit hash

                  echo "Cloudflare Deployment Trigger Response: $response"

                  # Replace the short ID in preview URL with the branch name
                  BRANCH_PREVIEW_URL=$(echo $PREVIEW_URL | sed "s/${SHORT_ID}/${PREVIEW_BRANCH}/")

                  echo "preview_id=$PREVIEW_ID" >> $GITHUB_ENV
                  echo "short_id=$SHORT_ID" >> $GITHUB_ENV     
                  echo "preview_url=$PREVIEW_URL" >> $GITHUB_ENV
                  echo "branch_preview_url=$BRANCH_PREVIEW_URL" >> $GITHUB_ENV
                  echo "commit_hash=$COMMIT_HASH" >> $GITHUB_ENV
